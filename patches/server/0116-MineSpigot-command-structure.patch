From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Angelillo15 <angelrizosrubios@gmail.com>
Date: Sat, 24 Sep 2022 00:45:55 +0200
Subject: [PATCH] MineSpigot command structure


diff --git a/src/main/java/es/angelillo15/MineSpigot.java b/src/main/java/es/angelillo15/MineSpigot.java
new file mode 100644
index 0000000000000000000000000000000000000000..01636b37116865176105f063d1fa4574439c0139
--- /dev/null
+++ b/src/main/java/es/angelillo15/MineSpigot.java
@@ -0,0 +1,7 @@
+package es.angelillo15;
+
+public class MineSpigot {
+    public static void load() {
+        MineSpigot.load();
+    }
+}
diff --git a/src/main/java/es/angelillo15/cmd/MineSpigotCMD.java b/src/main/java/es/angelillo15/cmd/MineSpigotCMD.java
new file mode 100644
index 0000000000000000000000000000000000000000..3940580596ef75f16fb5388d79237b74e526ba28
--- /dev/null
+++ b/src/main/java/es/angelillo15/cmd/MineSpigotCMD.java
@@ -0,0 +1,42 @@
+package es.angelillo15.cmd;
+
+import net.minecraft.server.MinecraftServer;
+import org.bukkit.Location;
+import org.bukkit.command.Command;
+import org.bukkit.command.CommandSender;
+import wtf.etil.mirai.MiraiCommand;
+
+import java.util.Collections;
+import java.util.List;
+import java.util.stream.Collectors;
+import java.util.stream.Stream;
+
+public class MineSpigotCMD extends Command {
+
+    public MineSpigotCMD() {
+        super("minespigot");
+        this.description = "MineSpigot related commands";
+        this.usageMessage = "/minespigot [reload | version]";
+        this.setPermission("bukkit.command.minespigot");
+    }
+
+    public static void init() {
+        MinecraftServer.getServer().server.getCommandMap().register("minespigot", "minespigot", new MiraiCommand());
+    }
+
+    @Override
+    public List<String> tabComplete(CommandSender sender, String alias, String[] args, Location location) throws IllegalArgumentException {
+        if (args.length == 1) {
+            return Stream.of("reload", "version")
+                .filter(arg -> arg.startsWith(args[0].toLowerCase()))
+                .collect(Collectors.toList());
+        }
+        return Collections.emptyList();
+    }
+
+    @Override
+    public boolean execute(CommandSender sender, String commandLabel, String[] args) {
+        return true;
+    }
+
+}
